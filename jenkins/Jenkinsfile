pipeline{
    agent any
    environment{
        dockertoken=credentials("docker-token")
    }
    parameters{
        string(name: 'voteChartVersion', defaultValue: '', description: 'vote helm chart version')
        string(name: 'workerChartVersion', defaultValue: '', description: 'worker helm chart version')
        string(name: 'resultChartVersion', defaultValue: '', description: 'result helm chart version')
    }

    stages{
        stage('Package/Push chart'){
            
            steps{ 
                sh """
                git branch -D main
                git checkout -b main
                """
                script{
                    if (params.voteChartVersion !="") {
                        sh """
                        cp ./chart/Chart.yaml chart.yaml.tmp && sed -e '/helm_vote/ {' -e 'n; s/version: "[0-9].[0-9].[0-9]"/version: "${params.voteChartVersion}"/' -e '}' < chart.yaml.tmp >./chart/Chart.yaml && rm -f chart.yaml.tmp
                        """
                    } else if (params.workerChartVersion !="") {
                        sh """
                        cp ./chart/Chart.yaml chart.yaml.tmp && sed  -e '/helm_worker/ {' -e 'n; s/version: "[0-9].[0-9].[0-9]"/version: "${params.workerChartVersion}"/' -e '}' < chart.yaml.tmp >./chart/Chart.yaml && rm -f chart.yaml.tmp
                        """
                    } else if (params.resultChartVersion !="") {
                        sh """
                        cp ./chart/Chart.yaml chart.yaml.tmp && sed  -e '/helm_result/ {' -e 'n; s/version: "[0-9].[0-9].[0-9]"/version: "${params.resultChartVersion}"/' -e '}' < chart.yaml.tmp >./chart/Chart.yaml && rm -f chart.yaml.tmp
                        """
                    }
                    else{
                        echo 'logic to abort the job'
                    }
                    sh """
                    helm dependency update ./chart/
                    cp ./chart/Chart.yaml chart.yaml.tmp && sed  -e '/type: / {' -e 'n; s/version: [0-9].([0-9]+).[0-9]/version: 0.${BUILD_NUMBER}.0/' -e '}' < chart.yaml.tmp >./chart/Chart.yaml && rm -f chart.yaml.tmp
                    helm package ./chart/
                    echo \${dockertoken} | helm registry login registry-1.docker.io -u vikasharya000 --password-stdin
                    helm push voting_app_chart-0.\${BUILD_NUMBER}.0.tgz oci://registry-1.docker.io/vikasharya000
                    """
                }
            }
        }
        stage('update git repo'){
            steps{
                sshagent (['git-ssh']) {
                    sh """
                    git config --global user.email "vikash.arya@thoughtworks"
                    git config --global user.name "vikasharya00"
                    git branch
                    git remote set-url origin git@github.com:vikasharya00/voting-app-chart.git 
                    git add .
                    git status
                    git commit -m"update chart.yaml"
                    git push -u origin main
                    """
                }
            }
        }
        stage ('deploy helm chart'){
            steps{
                script{
                    kubeconfig(credentialsId: 'kubeconfig') {
                        sh"""
                        helm install vote-app-chart oci://registry-1.docker.io/vikasharya000/voting_app_chart --version 0.${BUILD_NUMBER}.0
                        """
                    }
                }
            }
        }
    }

}