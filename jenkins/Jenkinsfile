pipeline{
    agent any
    
    parameters{
        string(name: 'voteChartVersion', defaultValue: '', description: 'vote helm chart version')
        string(name: 'workerChartVersion', defaultValue: '', description: 'worker helm chart version')
        string(name: 'resultChartVersion', defaultValue: '', description: 'result helm chart version')
    }

    stages{
        stage('Package/Push chart'){
            steps{ //need to add logic to update dependency versions
                script{
                    if (params.voteChartVersion !=null) {
                        sh """
                        cp ./chart/Chart.yaml chart.yaml.tmp && sed -e '/helm_vote/ {' -e 'n; s/version: "[0-9].[0-9].[0-9]"/version: "${params.voteChartVersion}"/' -e '}' < chart.yaml.tmp >./chart/Chart.yaml && rm -f chart.yaml.tmp
                        """
                    } else if (params.workerChartVersion !=null) {
                        sh """
                        cp ./chart/Chart.yaml chart.yaml.tmp && sed  -e '/helm_worker/ {' -e 'n; s/version: "[0-9].[0-9].[0-9]"/version: "${params.workerChartVersion}"/' -e '}' < chart.yaml.tmp >./chart/Chart.yaml && rm -f chart.yaml.tmp
                        """
                    } else if (params.resultChartVersion !=null) {
                        sh """
                        cp ./chart/Chart.yaml chart.yaml.tmp && sed  -e '/helm_result/ {' -e 'n; s/version: "[0-9].[0-9].[0-9]"/version: "${params.resultChartVersion}"/' -e '}' < chart.yaml.tmp >./chart/Chart.yaml && rm -f chart.yaml.tmp
                        """
                    }
                    else{
                        echo 'logic to abort the job'
                    }
                    sh """
                    echo \${dockertoken} | helm registry login registry-1.docker.io -u vikasharya000 --password-stdin
                    helm dependency update ./chart/
                    helm package ./chart/
                    helm push voting-app-chart-0.\${BUILD_NUMBER}.0.tgz oci://registry-1.docker.io/vikasharya000
                    """
                }
            }
        }
    }

}
///update-scenerio-1 [triggered by user]

//update-scenerio-2 [trigger from other pipeline]



// add parameter [vote, result, worker] version as user input
//user provide [vote version] if triggered from [vote] pipeline >> update vote version in chart.yaml
